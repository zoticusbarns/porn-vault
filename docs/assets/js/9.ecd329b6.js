(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{369:function(e,t,a){"use strict";a.r(t);var s=a(45),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"automatically-applying-labels"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#automatically-applying-labels"}},[e._v("#")]),e._v(" Automatically applying labels")]),e._v(" "),a("p",[e._v("For actors, studios and scenes, you can decide when their labels are added to their associated content: scenes and/or images")]),e._v(" "),a("p",[e._v('Example: Kali Roses has labels "blonde" & "tattoos". Importing a new video featuring Kali Roses (will be matched if "Kali Roses" is in the video title or path), the newly created scene will automatically inherit "blonde" & "tattoos" + other labels that have been extracted from the title or path.')]),e._v(" "),a("h2",{attrs:{id:"actors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#actors"}},[e._v("#")]),e._v(" Actors")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("matching.applyActorLabels")])])]),e._v(" "),a("p",[e._v("A list of events for when to apply actor labels to their scenes/images. Possible events:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v('"event:actor:create"')]),e._v(" - When an actor is created, the actor's labels will be pushed to the matched scenes (keep in mind this includes labels returned by plugins, right before the actor is created).")]),e._v(" "),a("li",[a("code",[e._v('"event:actor:update"')]),e._v(" - When an actor is updated, if their labels were modified and this event is enabled, "),a("strong",[e._v("new")]),e._v(" labels will be added to the actor's existing scenes.")]),e._v(" "),a("li",[a("code",[e._v('"event:actor:find-unmatched-scenes"')]),e._v(' When manually executing the "Find unmatched scenes" action, all the actor\'s current labels will be added to newly matched scenes.')]),e._v(" "),a("li",[a("code",[e._v('"plugin:actor:create"')]),e._v(" - When running actor plugins before an actor creation, the new labels will be added to the images created by the plugins (thumbnail, avatar...). ðŸš¨ This includes any labels that the creation process was started with.")]),e._v(" "),a("li",[a("code",[e._v('"event:scene:create"')]),e._v(" - When creating (from the graphql api) or importing a scene, the scene's actor's labels will be applied to the scene")]),e._v(" "),a("li",[a("code",[e._v('"event:scene:update"')]),e._v(" - same as above but when updating a scene.")]),e._v(" "),a("li",[a("code",[e._v('"plugin:scene:create"')]),e._v(" - When when the plugins are run right before creating or importing a scene, for the actors that were returned by the plugins, their labels will be applied to the scene.")]),e._v(" "),a("li",[a("code",[e._v('"plugin:scene:custom"')]),e._v(" - same as above but when plugins are run from the UI (includes existing actor's labels).")]),e._v(" "),a("li",[a("code",[e._v('"event:image:create"')]),e._v(" - When uploading an image for actor(s), the actors' labels will be added to the image")]),e._v(" "),a("li",[a("code",[e._v('"event:image:update"')]),e._v(" - same as above but when updating an image")]),e._v(" "),a("li",[a("code",[e._v('"event:marker:create"')]),e._v(" - When an marker is created, the actor's labels will be added to the marker")]),e._v(" "),a("li",[a("code",[e._v('"plugin:marker:create"')]),e._v(" - When an marker is created by a plugin, the scene's actors' labels will be added to the marker")])]),e._v(" "),a("h2",{attrs:{id:"studios"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#studios"}},[e._v("#")]),e._v(" Studios")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("matching.applyStudioLabels")])])]),e._v(" "),a("p",[e._v("A list of events for when to apply studio labels to their scenes/images. Basically the same as "),a("code",[e._v("applyActorLabels")]),e._v(" but for studios. Possible events:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v('"event:studio:create"')]),e._v(" - When a studio is created, the studio's labels will be pushed to the matched scenes (keep in mind this includes labels returned by plugins, right before the studio is created).")]),e._v(" "),a("li",[a("code",[e._v('"event:studio:update"')]),e._v(" - When a studio is updated, if their labels were modified, "),a("strong",[e._v("new")]),e._v(" labels will be added to the studio's existing scenes.")]),e._v(" "),a("li",[a("code",[e._v('"event:studio:find-unmatched-scenes"')]),e._v(' When manually executing the "Find unmatched scenes" action, all the studio\'s current labels will be added to newly matched scenes.')]),e._v(" "),a("li",[a("code",[e._v('"plugin:studio:create"')]),e._v(" - When running studio plugins before a studio creation, the new labels will be added to the images created by the plugins (thumbnail). ðŸš¨ This includes any labels that the creation process was started with.")]),e._v(" "),a("li",[a("code",[e._v('"plugin:studio:custom"')]),e._v(" - Same as above, but when updating a studio (includes any existing labels of the studio).")]),e._v(" "),a("li",[a("code",[e._v('"event:scene:create"')]),e._v(" - When creating (from the graphql api) or importing a scene, the scene's studio's labels will be applied to the scene")]),e._v(" "),a("li",[a("code",[e._v('"event:scene:update"')]),e._v(" - same as above but when updating a scene.")]),e._v(" "),a("li",[a("code",[e._v('"plugin:scene:create"')]),e._v(" - When when the plugins are run right before creating or importing a scene, for the actors that were returned by the plugins, their labels will be applied to the scene.")]),e._v(" "),a("li",[a("code",[e._v('"plugin:scene:custom"')]),e._v(" - same as above but when plugins are run from the UI (includes existing studio's labels).")])]),e._v(" "),a("h2",{attrs:{id:"scenes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scenes"}},[e._v("#")]),e._v(" Scenes")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("matching.applySceneLabels")])])]),e._v(" "),a("p",[e._v("Scenes are particular because their only derived content are images."),a("br"),e._v("\nThis config is a simple boolean: whether to apply the scene's labels to the images derived from the scene (thumbnails, screenshots...).")])])}),[],!1,null,null,null);t.default=i.exports}}]);