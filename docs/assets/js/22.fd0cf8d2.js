(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{382:function(t,e,s){"use strict";s.r(e);var a=s(45),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"systemd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#systemd"}},[t._v("#")]),t._v(" Systemd")]),t._v(" "),s("p",[t._v("To auto start porn-vault on boot using "),s("code",[t._v("systemd")]),t._v(" you create the following service file.")]),t._v(" "),s("p",[t._v("Create the file:"),s("br"),t._v(" "),s("code",[t._v("sudo nano /etc/systemd/system/pv.service")])]),t._v(" "),s("p",[t._v("Add the follwing text to the service file. Pay attention to following items:")]),t._v(" "),s("ul",[s("li",[t._v("Change "),s("code",[t._v("mnt-pv.mount")]),t._v(" to the name of your file mount if data is not stored localy."),s("br"),t._v(" "),s("em",[t._v("If data is local, you can omit this")]),t._v(". Your mount can be found using "),s("code",[t._v("sudo systemctl list-units --type=mounts")])]),t._v(" "),s("li",[t._v("If you don't have elasticsearch installed as a service, you can omit it from "),s("code",[t._v("After")])]),t._v(" "),s("li",[t._v("Change "),s("code",[t._v("/home/pv/pv")]),t._v(" in "),s("code",[t._v("WorkingDirectory")]),t._v(" and "),s("code",[t._v("ExecStart")]),t._v(" to the correct path for your system. Absolute path can be found be found by entering terminal typing "),s("code",[t._v("pwd")])])]),t._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[Unit]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Description")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("PV Start Service")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Waits for network to initialize, filesystems to mount, and # elasticsearch to start")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("After")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("network.target mnt-pv.mount elasticsearch.service")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[Service]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set to the directory where your Porn-Vault executable is")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WorkingDirectory")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/home/pv/pv")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Start executable. This must be an absolute path")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ExecStart")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("/home/pv/pv/porn-vault")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[Install]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Tells the system it needs to start before login")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("WantedBy")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("multi-user.target")]),t._v("\n")])])]),s("p",[s("code",[t._v("ctrl+o")]),t._v(" to write the file and then "),s("code",[t._v("ctrl+x")]),t._v(" to exit nano")]),t._v(" "),s("p",[t._v("Run:")]),t._v(" "),s("p",[s("code",[t._v("sudo systemctl daemon-reload")])]),t._v(" "),s("p",[s("code",[t._v("sudo systemctl start pv.service")])]),t._v(" "),s("p",[s("code",[t._v("sudo systemctl status pv.service")]),t._v("  - Use this to make sure everything started ok.")]),t._v(" "),s("p",[s("code",[t._v("sudo systemctl enable pv.service")]),t._v(" - If everything was ok in the last step run this to tell the system it should run this service at boot.")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("Credit: Spyderpb")])])}),[],!1,null,null,null);e.default=n.exports}}]);