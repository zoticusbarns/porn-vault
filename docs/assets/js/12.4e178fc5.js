(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{372:function(e,t,o){"use strict";o.r(t);var s=o(45),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"logging"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#logging"}},[e._v("#")]),e._v(" Logging")]),e._v(" "),o("p",[e._v("Logs are written to the console and can be written to files at the same time.\nThese are the available log levels:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("error")]),e._v(" - errors during execution")]),e._v(" "),o("li",[o("code",[e._v("warn")]),e._v(" - warnings for the user")]),e._v(" "),o("li",[o("code",[e._v("info")]),e._v(" - main information messages for the user. This is the recommended level for console logs")]),e._v(" "),o("li",[o("code",[e._v("http")]),e._v(" - http logs")]),e._v(" "),o("li",[o("code",[e._v("verbose")]),e._v(" - describes most top level operations")]),e._v(" "),o("li",[o("code",[e._v("debug")]),e._v(" - describes the execution of operations")]),e._v(" "),o("li",[o("code",[e._v("silly")]),e._v(" - describes minute operations")])]),e._v(" "),o("p",[e._v("Enabling a log level will also enable levels of higher priority.\nExample: enabling "),o("code",[e._v("info")]),e._v(" will also enable "),o("code",[e._v("error")]),e._v(" and "),o("code",[e._v("warn")])]),e._v(" "),o("h2",{attrs:{id:"logging-to-files"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#logging-to-files"}},[e._v("#")]),e._v(" Logging to files")]),e._v(" "),o("p",[e._v("The logs may be written to one or more files with "),o("code",[e._v("log.writeFile")]),e._v(". Here you can list the files you want to write to with a specific log level for each one."),o("br"),e._v("\nIt is recommended to maintain at least an error log so you can easily go back and see any errors that may have passed by too fast in the console.")]),e._v(" "),o("p",[e._v("For each file configuration, a new file will be created every hour or if the file reaches the "),o("code",[e._v("maxSize")]),e._v(" size or if the number of files\nfor that configuration reaches "),o("code",[e._v("maxFiles")]),e._v(".")]),e._v(" "),o("p",[e._v("When debugging or asking for help, you can add a second "),o("code",[e._v("debug")]),e._v(" or "),o("code",[e._v("silly")]),e._v(" configuration such as:")]),e._v(" "),o("div",{staticClass:"language-json extra-class"},[o("pre",{pre:!0,attrs:{class:"language-json"}},[o("code",[o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),o("span",{pre:!0,attrs:{class:"token property"}},[e._v('"level"')]),o("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token string"}},[e._v('"debug"')]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),o("span",{pre:!0,attrs:{class:"token property"}},[e._v('"prefix"')]),o("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token string"}},[e._v('"debug-"')]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),o("span",{pre:!0,attrs:{class:"token property"}},[e._v('"silent"')]),o("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),o("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),o("p",[e._v("This will help you to retrace the exact steps of the program."),o("br"),e._v("\nYou can also keep this in your config file, but quickly toggle it on/off via "),o("code",[e._v("silent: true/false")])])])}),[],!1,null,null,null);t.default=a.exports}}]);